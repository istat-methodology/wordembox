server.contextPath=/wordembox
server.port= 8080

spring.jmx.enabled=false
spring.config.name= wordembox
spring.application.name= wordembox
spring.jmx.default-domain= wordembox 
endpoints.jmx.domain= wordembox
 

eureka.client.serviceUrl.defaultZone= http://mec-svil:8080/mecregisterservice/eureka/
eureka.instance.leaseRenewalIntervalInSeconds= 5 
eureka.client.registerWithEureka= true
eureka.client.fetchRegistry= false

eureka.instance.statusPageUrlPath: /graphservice/info
eureka.instance.homePageUrlPath: /graphservice/
eureka.instance.healthCheckUrlPath: /graphservice/health

# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "netgloo_blog" as database name and 
# "root" as username and password.

# Oracle Datasource
 spring.datasource.url = jdbc:oracle:thin:@CROAZIA1.istat.it:1521:CRO1C
 spring.datasource.username = svil_mecbox
 spring.datasource.password = svilmecbox
# Oracle 12c dialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.Oracle12cDialect

# Mysql Datasource
# spring.datasource.url = jdbc:mysql://localhost:3306/mecbox?useSSL=false
# spring.datasource.username = root
# spring.datasource.password = mysql
# MySQL dialect
# spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect


# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1 FROM DUAL
spring.datasource.tomcat.max-active=1
spring.datasource.tomcat.initial-size=1
spring.datasource.tomcat.max-idle=1
spring.datasource.tomcat.min-idle=1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database



#disable the Thymeleaf template caching i
spring.thymeleaf.cache = false


logging.level.org.springframework.web=error
logging.level.org.hibernate=error
logging.level.org.hibernate.SQL=error
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=error

python.server.url=http://10.18.102.189:5500
